/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as QuizzesIndexRouteImport } from './routes/quizzes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as AssetsImagesIndexRouteImport } from './routes/assets/images/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizzesIndexRoute = QuizzesIndexRouteImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsImagesIndexRoute = AssetsImagesIndexRouteImport.update({
  id: '/assets/images/',
  path: '/assets/images/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/quizzes': typeof QuizzesIndexRoute
  '/assets/images': typeof AssetsImagesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/quizzes': typeof QuizzesIndexRoute
  '/assets/images': typeof AssetsImagesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login/': typeof LoginIndexRoute
  '/quizzes/': typeof QuizzesIndexRoute
  '/assets/images/': typeof AssetsImagesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/quizzes' | '/assets/images'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/quizzes' | '/assets/images'
  id: '__root__' | '/' | '/login/' | '/quizzes/' | '/assets/images/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  QuizzesIndexRoute: typeof QuizzesIndexRoute
  AssetsImagesIndexRoute: typeof AssetsImagesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/': {
      id: '/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof QuizzesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/images/': {
      id: '/assets/images/'
      path: '/assets/images'
      fullPath: '/assets/images'
      preLoaderRoute: typeof AssetsImagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  QuizzesIndexRoute: QuizzesIndexRoute,
  AssetsImagesIndexRoute: AssetsImagesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
